# 루트 타입
type Query {
  # 필드 정의
  users(query: String): [User!]!
  posts(query: String): [Post!]!
  comments: [Comment!]!
  me: User!
  post: Post!
}

# 쿼리 도큐먼트
query liftsAndTrails {
  # 셀렉션 세트
  # [이름]: 으로 필드 별칭 부여
  # 쿼리 인자로 결과 필터링
  open: liftcount(statis: OPEN)
  chairlifts: allLifts {
    name
    status
  }
  skiSlopes: allTrails {
    name
    difficulty
  }
}

# 필드(Lift)-결과(id 가 jazz-cat 인 Lift): 일대다 관계
query trailsAccessedByJazzCat {
  Lift(id: "jazz-cat") {
    # 스칼라 타입
    capacity

    # 객체 타입
    trailAccess {
      name
      difficulty
    }
  }
}

# 프래그먼트: 요청 필드 데이터 중복처리
# Lift 타입에 대한 liftInfo 셀렉션 세트
fragment liftInfo on Lift {
  name
  status
  capacity
  night
  elevationGain
}

fragment trailInfo on Trail {
  name
  difficulty
  accessedByLifts {
    ...liftInfo
  }
}

query {
  Lift(id: "jazz-cat") {
    ...liftInfo
    trailAccess {
      ...trailInfo
    }
  }

  Trail(id: "river-run") {
    ...trailInfo
  }
}

# 유니온 타입의 결과를 요청할 때
query schedule {
  agenda {
    # 인라인 프레그먼트: 익명의
    # ...on [타입] 으로 분기
    ... on Workout {
      name
      reps
    }
    ... on StudyGroup {
      name
      subject
      student
    }
  }
}

# 기명 프레그먼트
query today {
  agenda {
    ...workout
    ...study
  }
}

fragment workout on Workout {
  name
  reps
}

fragment study on StudyGroup {
  name
  subject
  students
}

# 인터페이스: 필드 하나로 객체 타입을 여러개 반환할 때 사용
# agend 필드는 ScheduleItem 인터페이스를 반환한다.
# 객체 타입이 ScheduleItem 인터페이스를 구현한다면 name, start, end 필드가 반드시 포함되어야한다.
query Schedule {
  agenda {
    name
    start
    end

    # ScheduleItem 구현체가 Workout 일 때, reps 필드를 추가한다.
    ... on Workout {
      reps
    }
  }
}

# 뮤테이션...
